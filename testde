local args = {
    [1] = "CarSpawnRemoveEvent",
    [2] = "Chiron"
}

game:GetService("ReplicatedStorage").Remotes.VehicleEvent:FireServer(unpack(args))

wait(2.5)
 
for i,v in pairs(DropOffs) do
       if v.Main.Beam.Enabled == true then
           local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character
local Humanoid = Character:FindFirstChildWhichIsA("Humanoid")

local SeatPart = Humanoid.SeatPart
local Vehicle = SeatPart.Parent
local Wheels = Vehicle:FindFirstChild("Wheels")
local Body = Vehicle:FindFirstChild("Body")

if SeatPart:FindFirstAncestor("Body") then
Vehicle = SeatPart1:FindFirstAncestor("Body").Parent
Wheels = (Wheels ~= nil and Wheels) or Vehicle1:FindFirstChild("Wheels")
end

if game.PlaceId == 3351674303 then
Wheels = Vehicle:FindFirstChild("Core")
end

Vehicle.PrimaryPart = SeatPart

local function GetWheelVelocity()
if game.PlaceId == 3351674303 then
return Wheels:GetChildren()[1]["Wheel"].Velocity, Wheels:GetChildren()[1]["Wheel"].RotVelocity
end
for index, value in pairs(Wheels:GetDescendants()) do
if value:IsA("BasePart") then
return value.Velocity, value.RotVelocity
end
end
end

local function SetWheelVelocity(Velocity, RotVelocity)
for index, value in pairs(Wheels:GetDescendants()) do
pcall(function()
value.Velocity = Velocity
if RotVelocity ~= nil then
value.RotVelocity = RotVelocity
end
end)
end
end

Character.Parent = Vehicle
Vehicle:MoveTo(Vector3.new(v.Position))
Character.Parent = workspace
       end
   end
   
wait(1)

local args = {
    [1] = "ChangeTeam",
    [2] = "Criminals"
}

game:GetService("ReplicatedStorage").Remotes.Teams:FireServer(unpack(args))

wait(1)

-- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "ChangeTeam",
    [2] = "Citizen"
}

game:GetService("ReplicatedStorage").Remotes.Teams:FireServer(unpack(args))

wait(1)
